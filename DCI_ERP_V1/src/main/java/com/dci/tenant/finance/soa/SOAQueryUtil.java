package com.dci.tenant.finance.soa;

public class SOAQueryUtil {

	public static final String SOA_CUSTOMER_HDR_LIST_date = "select C.customer_acct_code as code,ledger_date, C.entity_name as name, coalesce(acctCode,'') acctCode,coalesce(debit,0) debit,coalesce(credit,0) credit,coalesce(balance,0) balance from entity C left outer join (select  ledger_date,account_code acctCode,  coalesce(sum(bc_debit),0) debit,coalesce(sum(bc_credit),0) credit,(coalesce(sum(bc_credit),0) -coalesce(sum(bc_debit),0) ) AS balance from general_ledger  \r\n" + 
			" group by account_code,ledger_date) T on C.customer_acct_code = T.acctCode where is_customer =true and ledger_date::date >= TO_DATE(?,'DD-MM-YYYY') and ledger_date::date  <= TO_DATE(?,'DD-MM-YYYY') order by customer_acct_code";

	
	public static final String SOA_CUSTOMER_HDR_LIST = "select C.customer_acct_code as code, C.entity_name as name, coalesce(acctCode,'') acctCode,coalesce(debit,0) debit,coalesce(credit,0) credit,coalesce(balance,0) balance from entity C left outer join (select account_code acctCode,  coalesce(sum(bc_debit),0) debit,coalesce(sum(bc_credit),0) credit,(coalesce(sum(bc_credit),0) -coalesce(sum(bc_debit),0) ) AS balance from general_ledger group by account_code) T on C.customer_acct_code = T.acctCode where is_customer =true order by customer_acct_code";
	public static final String SOA_CUSTOMER_DTL_LIST_date = "select  account_code acctCode, to_char(ledger_date,'dd/mm/yyyy') ledgerDate, transaction_no transactionNo, coalesce(bc_debit,0) debit,  coalesce(bc_credit,0) credit from general_ledger  where account_code = ?  union  select  account_code acctCode, to_char(ledger_date,'dd/mm/yyyy') ledgerDate, transaction_no transactionNo, coalesce(bc_debit,0) debit,  coalesce(bc_credit,0) credit from general_ledger  where sub_account_code = ? and ledger_date::date >= TO_DATE(?,'DD-MM-YYYY') and ledger_date::date  <= TO_DATE(?,'DD-MM-YYYY')\r\n" ; 
	public static final String SOA_CUSTOMER_DTL_LIST = "select  account_code acctCode, to_char(ledger_date,'dd/mm/yyyy') ledgerDate, transaction_no transactionNo, coalesce(bc_debit,0) debit, coalesce(bc_credit,0) credit from general_ledger  where account_code = ?  union select  account_code acctCode, to_char(ledger_date,'dd/mm/yyyy') ledgerDate, transaction_no transactionNo, coalesce(bc_debit,0) debit,coalesce(bc_credit,0) credit from general_ledger  where sub_account_code = ?" ; 

			//"select  account_code acctCode, to_char(ledger_date,'dd/mm/yyyy') ledgerDate, transaction_no transactionNo, coalesce(bc_debit,0) debit, " + "coalesce(bc_credit,0) credit from general_ledger " + "where account_code = ? " + "union " + "select  account_code acctCode, to_char(ledger_date,'dd/mm/yyyy') ledgerDate, transaction_no transactionNo, coalesce(bc_debit,0) debit, " + "coalesce(bc_credit,0) credit from general_ledger " + "where sub_account_code = ?";

	public static final String DEBTOR_OUTSTANDING = "select (coalesce(sum(credit),0)-coalesce(sum(debit),0)) total_amount from entity C left outer join (select account_code, sum(bc_credit) credit, sum(bc_debit) debit from general_ledger group by account_code) T on C.customer_acct_code = T.account_code where is_customer =true";

	
	public static final String DEBTOR_OUTSTANDING_date = "select (coalesce(sum(credit),0)-coalesce(sum(debit),0)) total_amount from entity C left outer join (select ledger_date,account_code, sum(bc_credit) credit, sum(bc_debit) debit from general_ledger group by account_code,ledger_date) T on C.customer_acct_code = T.account_code where is_customer =true and ledger_date::date >= TO_DATE(?,'DD-MM-YYYY') and ledger_date::date  <= TO_DATE(?,'DD-MM-YYYY') \r\n" ;

	public static final String SOA_SUPPLIER_HDR_LIST = "select s.supplier_acct_code as code, s.entity_name as name, coalesce(acctCode,'') acctCode,coalesce(debit,0) debit, " + "coalesce(credit,0) credit,coalesce(balance,0)  balance from entity s " + "left outer join (select acctCode, sum(debit) debit, sum(credit) credit, sum(balance) balance from (select account_code acctCode,  coalesce(sum(bc_debit),0) debit, " + "coalesce(sum(bc_credit),0) credit,(coalesce(sum(bc_credit),0) -coalesce(sum(bc_debit),0) ) AS balance "
			+ "from general_ledger group by account_code " + "union " + "select sub_account_code acctCode,  coalesce(sum(bc_debit),0) debit, " + "coalesce(sum(bc_credit),0) credit,(coalesce(sum(bc_credit),0) -coalesce(sum(bc_debit),0) ) AS balance " + "from general_ledger group by sub_account_code) T1 group by acctCode) T on s.supplier_acct_code = T.acctCode " + "where is_vendor =true order by s.supplier_acct_code";
	public static final String SOA_SUPPLIER_HDR_LIST_date ="select ledger_date,s.supplier_acct_code as code, s.entity_name as name, coalesce(acctCode,'') acctCode,coalesce(debit,0) debit, coalesce(credit,0) credit,coalesce(balance,0)  balance from entity s left outer join (select ledger_date ,acctCode, sum(debit) debit, sum(credit) credit, sum(balance) balance from (select ledger_date,account_code acctCode,  coalesce(sum(bc_debit),0) debit, coalesce(sum(bc_credit),0) credit,(coalesce(sum(bc_credit),0) -coalesce(sum(bc_debit),0) ) AS balance "
			+ "			   from general_ledger    group by account_code,ledger_date union select ledger_date,sub_account_code acctCode,  coalesce(sum(bc_debit),0) debit, coalesce(sum(bc_credit),0) credit,(coalesce(sum(bc_credit),0) -coalesce(sum(bc_debit),0) ) AS balance from general_ledger group by sub_account_code,ledger_date) T1 group by acctCode,ledger_date) T on s.supplier_acct_code = T.acctCode where is_vendor =true and ledger_date::date >= TO_DATE(?,'DD-MM-YYYY') and ledger_date::date  <= TO_DATE(?,'DD-MM-YYYY') order by s.supplier_acct_code";
	public static final String CREDITOR_OUTSTANDING_date = "	select (coalesce(sum(credit),0)-coalesce(sum(debit),0)) total_amount from entity C  left outer join (select ledger_date,  account_code, sum(bc_credit) credit, sum(bc_debit) debit  from general_ledger group by account_code,ledger_date  union select  ledger_date,sub_account_code account_code, sum(bc_credit) credit, sum(bc_debit) debit  from general_ledger group by sub_account_code,ledger_date) T on C.supplier_acct_code = T.account_code where is_vendor =true  and ledger_date::date >= TO_DATE(?,'DD-MM-YYYY') and ledger_date::date  <= TO_DATE(?,'DD-MM-YYYY') \r\n" ;
	
	public static final String CREDITOR_OUTSTANDING = "select (coalesce(sum(credit),0)-coalesce(sum(debit),0)) total_amount from entity C " + "left outer join (select account_code, sum(bc_credit) credit, sum(bc_debit) debit " + "from general_ledger group by account_code " + "union select sub_account_code account_code, sum(bc_credit) credit, sum(bc_debit) debit " + "from general_ledger group by sub_account_code) T on C.supplier_acct_code = T.account_code where is_vendor =true";
}
